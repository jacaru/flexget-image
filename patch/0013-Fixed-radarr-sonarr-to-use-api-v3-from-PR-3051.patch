From dc9753742120fe904502da3fc540001d19c6bf3c Mon Sep 17 00:00:00 2001
From: Jaime <1446775+jacaru@users.noreply.github.com>
Date: Sun, 19 Jun 2022 16:56:06 +0200
Subject: [PATCH 13/13] Fixed radarr & sonarr to use api v3 from PR#3051

---
 .../components/managed_lists/lists/radarr_list.py    | 12 ++++++------
 .../components/managed_lists/lists/sonarr_list.py    |  8 +++++---
 2 files changed, 11 insertions(+), 9 deletions(-)

diff --git a/flexget/components/managed_lists/lists/radarr_list.py b/flexget/components/managed_lists/lists/radarr_list.py
index 8b857443f..cb884df4d 100644
--- a/flexget/components/managed_lists/lists/radarr_list.py
+++ b/flexget/components/managed_lists/lists/radarr_list.py
@@ -75,7 +75,7 @@ def request_delete_json(url, headers):
 def request_post_json(url, headers, data):
     """Makes a POST request and returns the JSON response"""
     try:
-        response = requests.post(url, headers=headers, data=data, timeout=10)
+        response = requests.post(url, headers=headers, json=data, timeout=10)
         if response.status_code == 201:
             return response.json()
         else:
@@ -123,7 +123,7 @@ class RadarrAPIService:
         if parsed_base_url.port:
             port = int(parsed_base_url.port)
 
-        self.api_url = "%s://%s:%s%s/api/" % (
+        self.api_url = "%s://%s:%s%s/api/v3/" % (
             parsed_base_url.scheme,
             parsed_base_url.netloc,
             port,
@@ -132,7 +132,7 @@ class RadarrAPIService:
 
     def get_profiles(self):
         """Gets all profiles"""
-        request_url = self.api_url + "profile"
+        request_url = self.api_url + "qualityProfile"
         headers = self._default_headers()
         return request_get_json(request_url, headers)
 
@@ -147,7 +147,7 @@ class RadarrAPIService:
         request_url = self.api_url + "tag"
         headers = self._default_headers()
         data = {"label": label}
-        return request_post_json(request_url, headers, json.dumps(data))
+        return request_post_json(request_url, headers, data)
 
     def get_movies(self):
         """Gets all movies"""
@@ -220,7 +220,7 @@ class RadarrAPIService:
             data["addOptions"] = add_options
 
         try:
-            json_response = request_post_json(request_url, headers, json.dumps(data))
+            json_response = request_post_json(request_url, headers, data)
         except RadarrRequestError as ex:
             spec_ex = spec_exception_from_response_ex(ex)
             if spec_ex:
@@ -530,7 +530,7 @@ class RadarrSet(MutableSet):
 
             # Check if we should add quality requirement
             if self.config.get("include_data"):
-                movie_profile_id = movie["profileId"]
+                movie_profile_id = movie["qualityProfileId"]
                 for profile in profiles:
                     profile_id = profile["id"]
                     if profile_id == movie_profile_id:
diff --git a/flexget/components/managed_lists/lists/sonarr_list.py b/flexget/components/managed_lists/lists/sonarr_list.py
index 78e701d57..6e7dc8729 100644
--- a/flexget/components/managed_lists/lists/sonarr_list.py
+++ b/flexget/components/managed_lists/lists/sonarr_list.py
@@ -12,7 +12,7 @@ logger = logger.bind(name='sonarr_list')
 
 SERIES_ENDPOINT = 'series'
 LOOKUP_ENDPOINT = 'series/lookup'
-PROFILE_ENDPOINT = 'profile'
+PROFILE_ENDPOINT = 'qualityProfile'
 ROOTFOLDER_ENDPOINT = 'Rootfolder'
 DELETE_ENDPOINT = 'series/{}'
 
@@ -36,6 +36,7 @@ class SonarrSet(MutableSet):
             'ignore_episodes_without_files': {'type': 'boolean', 'default': False},
             'ignore_episodes_with_files': {'type': 'boolean', 'default': False},
             'profile_id': {'type': 'integer', 'default': 1},
+            'language_id': {'type': 'integer', 'default': 1},
             'season_folder': {'type': 'boolean', 'default': False},
             'monitored': {'type': 'boolean', 'default': True},
             'root_folder_path': {'type': 'string'},
@@ -61,7 +62,7 @@ class SonarrSet(MutableSet):
         base_url = self.config['base_url']
         port = self.config['port']
         base_path = self.config['base_path']
-        url = '{}:{}{}/api/{}'.format(base_url, port, base_path, endpoint)
+        url = '{}:{}{}/api/v3/{}'.format(base_url, port, base_path, endpoint)
         headers = {'X-Api-Key': self.config['api_key']}
         if term:
             url += '?term={}'.format(term)
@@ -147,7 +148,7 @@ class SonarrSet(MutableSet):
                 # Checks if to retrieve ended shows
                 if show['status'] == 'ended' and not self.config.get('include_ended'):
                     continue
-            profile = profiles_dict.get(show['profileId'])
+            profile = profiles_dict.get(show['qualityProfileId'])
             if profile:
                 fg_qualities, fg_cutoff = self.quality_requirement_builder(profile)
 
@@ -208,6 +209,7 @@ class SonarrSet(MutableSet):
         # Setting defaults for Sonarr
         show['profileId'] = self.config.get('profile_id')
         show['qualityProfileId'] = self.config.get('profile_id')
+        show['languageProfileId'] = self.config.get('language_id')
         show['seasonFolder'] = self.config.get('season_folder')
         show['monitored'] = self.config.get('monitored')
         show['seriesType'] = self.config.get('series_type')
-- 
2.30.2

